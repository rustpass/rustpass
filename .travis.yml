language: rust
rust:
  - stable
  - beta
  - nightly

stages:
  - tools
  - build-and-test

env:
  global:
    - RUSTFLAGS="-C target-feature=+aes,+sse,+sse2"

jobs:
  fast_finish: true
  include:
    - name: "x86_64-unknown-linux-gnu"
      env: TARGET="x86_64-unkown-linux-gnu"
      os: linux
      dist: bionic
      stage: build-and-test
    - name: "x86_64-apple-darwin"
      env: TARGET=x86_64-apple-darwin
      os: osx
      osx_image: xcode12u
      stage: build-and-test
    - name: "rustfmt"
      install: true
      script: |
        if rustup component add rustfmt-preview ; then
            ci/run_cargo_tool.sh check_fmt || true
        fi
      stage: tools
#    - name: "clippy"
#      install: true
#      script: |
#        if rustup component add clippy-preview ; then
#            ci/run_cargo_tool.sh clippy
#        fi
#      stage: tools
      
  allow_failures:
    - rust: nightly

arch:
  - amd64

git:
  submodules: false

before_install: bash ci/prepare.sh
install: bash ci/install.sh
before_script: cargo generate-lockfile
script: bash ci/build.sh dev
after_script: set +e

cache: cargo

before_cache:
  - rm -rf "$HOME/.cargo/registry/src"
  - chmod -R a+r $HOME/.cargo;

branches:
  only:
    - master

notifications:
  email:
    on_success: never